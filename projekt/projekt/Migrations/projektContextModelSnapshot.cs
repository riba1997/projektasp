// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projekt.Models;

namespace projekt.Migrations
{
    [DbContext(typeof(projektContext))]
    partial class projektContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AktorFilm", b =>
                {
                    b.Property<int>("AktorsId")
                        .HasColumnType("int");

                    b.Property<int>("FilmsId")
                        .HasColumnType("int");

                    b.HasKey("AktorsId", "FilmsId");

                    b.HasIndex("FilmsId");

                    b.ToTable("AktorFilm");
                });

            modelBuilder.Entity("projekt.Models.Aktor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Aktor");
                });

            modelBuilder.Entity("projekt.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("KategoriaId")
                        .HasColumnType("int");

                    b.Property<bool>("Nowy")
                        .HasColumnType("bit");

                    b.Property<int>("RezyserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RokProdukcji")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tytul")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KategoriaId");

                    b.HasIndex("RezyserId");

                    b.ToTable("Film");
                });

            modelBuilder.Entity("projekt.Models.FilmAktor", b =>
                {
                    b.Property<int>("AktorId")
                        .HasColumnType("int");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.HasKey("AktorId", "FilmId");

                    b.HasIndex("FilmId");

                    b.ToTable("FilmAktor");
                });

            modelBuilder.Entity("projekt.Models.Grade", b =>
                {
                    b.Property<int>("AktorId")
                        .HasColumnType("int");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("Ocena")
                        .HasColumnType("int");

                    b.HasKey("AktorId", "FilmId");

                    b.HasIndex("FilmId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("projekt.Models.Kategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategoria");
                });

            modelBuilder.Entity("projekt.Models.Rezyser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ImieNazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rezyser");
                });

            modelBuilder.Entity("AktorFilm", b =>
                {
                    b.HasOne("projekt.Models.Aktor", null)
                        .WithMany()
                        .HasForeignKey("AktorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projekt.Models.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("projekt.Models.Film", b =>
                {
                    b.HasOne("projekt.Models.Kategoria", "Kategoria")
                        .WithMany("Films")
                        .HasForeignKey("KategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projekt.Models.Rezyser", "Rezyser")
                        .WithMany("Films")
                        .HasForeignKey("RezyserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategoria");

                    b.Navigation("Rezyser");
                });

            modelBuilder.Entity("projekt.Models.FilmAktor", b =>
                {
                    b.HasOne("projekt.Models.Aktor", "Aktor")
                        .WithMany("FilmAktors")
                        .HasForeignKey("AktorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projekt.Models.Film", "Film")
                        .WithMany("FilmAktors")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aktor");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("projekt.Models.Grade", b =>
                {
                    b.HasOne("projekt.Models.Aktor", "Aktor")
                        .WithMany()
                        .HasForeignKey("AktorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projekt.Models.Film", "Film")
                        .WithMany()
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aktor");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("projekt.Models.Aktor", b =>
                {
                    b.Navigation("FilmAktors");
                });

            modelBuilder.Entity("projekt.Models.Film", b =>
                {
                    b.Navigation("FilmAktors");
                });

            modelBuilder.Entity("projekt.Models.Kategoria", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("projekt.Models.Rezyser", b =>
                {
                    b.Navigation("Films");
                });
#pragma warning restore 612, 618
        }
    }
}
